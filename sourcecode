#include <iostream>
#include <cstdio>
#include <vector>
#include <string>
#include <fstream>
#include <queue>

using namespace std;

#define F1(i,i1,i2) for(int i=i1 ; i<=i2 ; i++)
#define NWORD 5757

struct TRIE{
    int c[256];
    int num;
}trie[21*NWORD];

int last,dem,lt[NWORD+1],check[NWORD+1];
string word[NWORD+1];
vector<int> path[NWORD+1],trace;
queue<int> Q;

void intrie(string s,int x) //them tu s vao cay trie
{
    int node = 1;
    F1(i,0,4)
    {
        if (trie[node].c[(int)s[i]] == 0)
        {
            last++;
            trie[node].c[(int)s[i]] = last ;
        }
        node = trie[node].c[(int)s[i]];
    }
    trie[node].num = x;
}

void enterknuth()
{
    ifstream sgb;
    sgb.open("sgb-words.txt");
    last = 1;
    string s;
    F1(i,1,NWORD)
    {
        sgb>>s;
        word[i] = s;
        intrie(s,i);
    }
    sgb.close();
}

void xaycanh(int st, int node, int w, int p) //xay canh cho tu thu st
{
    if (p>1) return;
    if (w>4){
        if (p)
        path[st].push_back(trie[node].num);
        return;
    }
    F1(i,(int)'a',(int)'z')
    if (trie[node].c[i])
    {
        int cost = 0;
        if ((int)word[st][w] != i) cost = 1;
        xaycanh(st , trie[node].c[i] , w+1 , p + cost);
    }
}

void dfs(int u)
{
    lt[u] = dem;
    F1(i,0,(int)path[u].size()-1)
    {
        int v = path[u][i];
        if (lt[v]==0) dfs(v);
    }
}

void dothi()
{
    F1(i,1,NWORD)
        xaycanh(i,1,0,0);
    dem = 0;
    //dem so thanh phan lien thong
    F1(i,1,NWORD)
        if (lt[i]==0)
        {
            dem++;
            dfs(i);
        }
    cout<<"So thanh phan lien thong cua do thi: "<<dem<<'\n';
}

void timduong()
{
    fflush(stdin);
    string a,b;
    cout<<"Nhap vao tu bat dau u va tu ket thuc v:\n";
    cin>>a>>b;
    int dau=0,cuoi=0;
    F1(i,1,NWORD){
        if (word[i]==a) dau = i;
        if (word[i]==b) cuoi = i;
    }
    //
    if (dau==0){
        cout<<"Khong co tu "<<a<<" trong tu dien sgb-words!\n";
        return;
    }
    if (cuoi==0){
        cout<<"Khong co tu "<<b<<" trong tu dien sgb-words!\n";
        return;
    }
    if (lt[dau]!=lt[cuoi]){
        cout<<"Khong co duong di.\n";
        return;
    }
    //tim duong di ngan nhat
    Q.push(dau);
    check[dau] = -1;
    while (!Q.empty())
    {
        int u = Q.front();
        Q.pop();
        if (u==cuoi) break;
        F1(i,1,(int)path[u].size()-1){
            int v = path[u][i];
            if (check[v]==0){
                Q.push(v);
                check[v] = u;
            }
        }

    }
    int tmp = cuoi;
    while(check[tmp] != -1)
    {
        tmp = check[tmp];
        trace.push_back(tmp);
    }
    cout<<"Duong di tu "<<a<<" den "<<b<<" la:\n";
    for(int i=(int)trace.size()-1 ; i>=0 ; i--)
        cout<<word[trace[i]]<<" ";
    cout<<word[cuoi];
}

main()
{
    enterknuth(); //nhap vao bo tu tien sgb-words
    dothi(); //xay dung cac canh cua do thi
    timduong(); //xu li yeu cau
}
